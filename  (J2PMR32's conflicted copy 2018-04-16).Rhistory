domain = data$cluster)
set.seed(0)
data1 %>% sample_n(size=10000) %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(~Pickup_longitude, ~Pickup_latitude, radius = 1,
color = ~pal(cluster), fillOpacity = 0.001)
greentaxi2 <- makeIcon(
iconUrl = "https://i.imgur.com/6rw618Q.png",
iconWidth = 18, iconHeight = 15,
iconAnchorX = 9, iconAnchorY = 19
)
data_kmeans$centers %>% as_data_frame() %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(~Pickup_longitude, ~Pickup_latitude, radius = 1,
color = "firebrick", fillOpacity = 0.001)%>%
addMarkers(~Pickup_longitude, ~Pickup_latitude, icon = greentaxi2)
x <- data_frame(Pickup_longitude= -73.99, Pickup_latitude= 40.691)
predict(data_kmeans,x)
library(clue)
library(clue)
cluster_num <- cl_predict(data_kmeans,x)
data1 %>% filter(cluster==cluster_num) %>% head()
greentaxi <- makeIcon(
iconUrl = "https://i.imgur.com/6rw618Q.png",
iconWidth = 38, iconHeight = 35,
iconAnchorX = 19, iconAnchorY = 39
)
knitr::opts_chunk$set(echo = TRUE)
greentaxi2 <- makeIcon(
iconUrl = "https://i.imgur.com/6rw618Q.png",
iconWidth = 18, iconHeight = 15,
iconAnchorX = 9, iconAnchorY = 19
)
data_kmeans$centers %>% as_data_frame() %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(~Pickup_longitude, ~Pickup_latitude, radius = 1,
color = "firebrick", fillOpacity = 0.001)%>%
addMarkers(~Pickup_longitude, ~Pickup_latitude, icon = greentaxi2, label = ~as.character(paste("Cluster Number:",data1$cluster))
greentaxi2 <- makeIcon(
iconUrl = "https://i.imgur.com/6rw618Q.png",
iconWidth = 18, iconHeight = 15,
iconAnchorX = 9, iconAnchorY = 19
)
data_kmeans$centers %>% as_data_frame() %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(~Pickup_longitude, ~Pickup_latitude, radius = 1,
color = "firebrick", fillOpacity = 0.001)%>%
addMarkers(~Pickup_longitude, ~Pickup_latitude, icon = greentaxi2)
data1 %>% head()
data1 %>% filter(cluster==cluster_num) %>% head()
result <- data1 %>% filter(cluster==cluster_num) %>% head()
result %>% head()
Weekday_Top5 %>% group_by(lng=round(Pickup_longitude,round_num),lat=round(Pickup_latitude,round_num)) %>%
count() %>% arrange(desc(n)) %>% head(5)
result %>% group_by(lng=round(Pickup_longitude,round_num),lat=round(Pickup_latitude,round_num)) %>%
count() %>% arrange(desc(n)) %>% head(5)
round_num <- 3
result %>% group_by(lng=round(Pickup_longitude,round_num),lat=round(Pickup_latitude,round_num)) %>%
count() %>% arrange(desc(n)) %>% head(5)
data_kmeans <- data_coord %>% kmeans(20,nstart=20)
data1 <- data %>% filter(Trip_type==1)
data1$cluster <- data_kmeans$cluster
pal <- colorNumeric(
palette = "Blues",
domain = data$cluster)
set.seed(0)
data1 %>% sample_n(size=10000) %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(~Pickup_longitude, ~Pickup_latitude, radius = 1,
color = ~pal(cluster), fillOpacity = 0.001)
greentaxi2 <- makeIcon(
iconUrl = "https://i.imgur.com/6rw618Q.png",
iconWidth = 18, iconHeight = 15,
iconAnchorX = 9, iconAnchorY = 19
)
data_kmeans$centers %>% as_data_frame() %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(~Pickup_longitude, ~Pickup_latitude, radius = 1,
color = "firebrick", fillOpacity = 0.001)%>%
addMarkers(~Pickup_longitude, ~Pickup_latitude, icon = greentaxi2)
x <- data_frame(Pickup_longitude= -73.99, Pickup_latitude= 40.691)
library(clue)
cluster_num <- cl_predict(data_kmeans,x)
result <- data1 %>% filter(cluster==cluster_num) %>% head()
round_num <- 3
result %>% group_by(lng=round(Pickup_longitude,round_num),lat=round(Pickup_latitude,round_num)) %>%
count() %>% arrange(desc(n)) %>% head(5)
x <- data_frame(Pickup_longitude= -73.59, Pickup_latitude= 40.691)
cluster_num <- cl_predict(data_kmeans,x)
result <- data1 %>% filter(cluster==cluster_num) %>% head()
round_num <- 3
result %>% group_by(lng=round(Pickup_longitude,round_num),lat=round(Pickup_latitude,round_num)) %>%
count() %>% arrange(desc(n)) %>% head(5)
x <- data_frame(Pickup_longitude= -73.59, Pickup_latitude= 40.291)
library(clue)
cluster_num <- cl_predict(data_kmeans,x)
result <- data1 %>% filter(cluster==cluster_num) %>% head()
result
round_num <- 3
result %>% group_by(lng=round(Pickup_longitude,round_num),lat=round(Pickup_latitude,round_num)) %>%
count() %>% arrange(desc(n)) %>% head(5)
result
result %>% str()
data_kmeans <- data_coord %>% kmeans(10,nstart=20)
data1 <- data %>% filter(Trip_type==1)
data1$cluster <- data_kmeans$cluster
pal <- colorNumeric(
palette = "Blues",
domain = data$cluster)
set.seed(0)
data1 %>% sample_n(size=10000) %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(~Pickup_longitude, ~Pickup_latitude, radius = 1,
color = ~pal(cluster), fillOpacity = 0.001)
greentaxi2 <- makeIcon(
iconUrl = "https://i.imgur.com/6rw618Q.png",
iconWidth = 18, iconHeight = 15,
iconAnchorX = 9, iconAnchorY = 19
)
data_kmeans$centers %>% as_data_frame() %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(~Pickup_longitude, ~Pickup_latitude, radius = 1,
color = "firebrick", fillOpacity = 0.001)%>%
addMarkers(~Pickup_longitude, ~Pickup_latitude, icon = greentaxi2)
x <- data_frame(Pickup_longitude= -73.59, Pickup_latitude= 40.291)
library(clue)
cluster_num <- cl_predict(data_kmeans,x)
result <- data1 %>% filter(cluster==cluster_num) %>% head()
result %>% str()
round_num <- 3
result %>% group_by(lng=round(Pickup_longitude,round_num),lat=round(Pickup_latitude,round_num)) %>%
count() %>% arrange(desc(n)) %>% head(5)
data_kmeans$centers %>% as_data_frame() %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(~Pickup_longitude, ~Pickup_latitude, radius = 1,
color = "firebrick", fillOpacity = 0.001)%>%
addMarkers(~Pickup_longitude, ~Pickup_latitude, icon = greentaxi)
x <- data_frame(Pickup_longitude= -73.99, Pickup_latitude= 40.291)
library(clue)
cluster_num <- cl_predict(data_kmeans,x)
result <- data1 %>% filter(cluster==cluster_num) %>% head()
result %>% str()
x <- data_frame(Pickup_longitude= -73.99, Pickup_latitude= 40.791)
library(clue)
cluster_num <- cl_predict(data_kmeans,x)
result <- data1 %>% filter(cluster==cluster_num) %>% head()
result %>% str()
x <- data_frame(Pickup_longitude= -73.99, Pickup_latitude= 41.791)
library(clue)
cluster_num <- cl_predict(data_kmeans,x)
result <- data1 %>% filter(cluster==cluster_num) %>% head()
result %>% str()
x
x <- data_frame(Pickup_longitude= -73.39, Pickup_latitude= 41.791)
library(clue)
cluster_num <- cl_predict(data_kmeans,x)
result <- data1 %>% filter(cluster==cluster_num) %>% head()
result %>% str()
cl_predict(data_kmeans,x)
x <- data_frame(Pickup_longitude= -73.39, Pickup_latitude= 42.791)
cluster_num <- cl_predict(data_kmeans,x)
cl_predict(data_kmeans,x)
data_kmeans
data1 %>% sample_n(size=10000) %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(~Pickup_longitude, ~Pickup_latitude, radius = 1,
color = ~pal(cluster), fillOpacity = 0.001)
library("flexclust")
install.packages("flexclust")
library("flexclust")
cluster_num <- predict(data_kmeans,x)
cluster_num <- cl_predict(data_kmeans,x)
cl_predict(data_kmeans,x)
data_kmeans$centers
x <- data_frame(Pickup_longitude= -73.93, Pickup_latitude= 40.791)
library(clue)
library("flexclust")
cluster_num <- cl_predict(data_kmeans,x)
result <- data1 %>% filter(cluster==cluster_num) %>% head()
result %>% str()
cluster_num
data_kmeans$centers
x <- data_frame(Pickup_longitude= -73.88342, Pickup_latitude= 40.74448)
data_kmeans$centers
cluster_num <- cl_predict(data_kmeans,x)
result <- data1 %>% filter(cluster==cluster_num) %>% head()
result %>% str()
cluster_num
(cluster_num <- cl_predict(data_kmeans,x))
data_kmeans$centers
x <- data_frame(Pickup_longitude= -73.96523, Pickup_latitude= 40.61248)
data_kmeans$centers
library(clue)
library("flexclust")
(cluster_num <- cl_predict(data_kmeans,x))
result <- data1 %>% filter(cluster==cluster_num) %>% head()
result %>% str()
result <- data1 %>% filter(cluster==3) %>% head()
result %>% str()
result <- data1 %>% filter(cluster==4) %>% head()
result %>% str()
result <- data1 %>% filter(cluster=4) %>% head()
data1 %>% head()
data1 %>% str()
for(i=1:10){
result <- data1 %>% filter(cluster==i) %>% head()
result %>% str()
}
for(i=1:10) {
result <- data1 %>% filter(cluster==i) %>% head()
result %>% str()
}
for (i=1:10) {
result <- data1 %>% filter(cluster==i) %>% head()
result %>% str()
}
for (i in 1:10) {
result <- data1 %>% filter(cluster==i) %>% head()
result %>% str()
}
data_kmeans$centers
library(clue)
(cluster_num <- cl_predict(data_kmeans,x))
result <- data1 %>% filter(cluster==cluster_num)
result %>% str()
round_num <- 3
result %>% group_by(lng=round(Pickup_longitude,round_num),lat=round(Pickup_latitude,round_num)) %>%
count() %>% arrange(desc(n)) %>% head(5)
data_kmeans <- data_coord %>% kmeans(20,nstart=20)
data1 <- data %>% filter(Trip_type==1)
data1$cluster <- data_kmeans$cluster
set.seed(0)
pal <- colorNumeric(
palette = "Blues",
domain = data$cluster)
data1 %>% sample_n(size=10000) %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(~Pickup_longitude, ~Pickup_latitude, radius = 1,
color = ~pal(cluster), fillOpacity = 0.001)
greentaxi2 <- makeIcon(
iconUrl = "https://i.imgur.com/6rw618Q.png",
iconWidth = 18, iconHeight = 15,
iconAnchorX = 9, iconAnchorY = 19
)
data_kmeans$centers %>% as_data_frame() %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(~Pickup_longitude, ~Pickup_latitude, radius = 1,
color = "firebrick", fillOpacity = 0.001)%>%
addMarkers(~Pickup_longitude, ~Pickup_latitude, icon = greentaxi)
x <- data_frame(Pickup_longitude= -73.96523, Pickup_latitude= 40.61248)
data_kmeans$centers
library(clue)
(cluster_num <- cl_predict(data_kmeans,x))
result <- data1 %>% filter(cluster==cluster_num)
result %>% str()
round_num <- 3
result %>% group_by(lng=round(Pickup_longitude,round_num),lat=round(Pickup_latitude,round_num)) %>%
count() %>% arrange(desc(n)) %>% head(5)
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(~lng, ~lat, radius = 1,
color = "firebrick", fillOpacity = 0.001)%>%
addMarkers(~lng, ~lat, icon = greentaxi, label = ~as.character(paste("Number of Pick ups:",Weekday_Top5$n)))
x <- data_frame(Pickup_longitude= -73.90395, Pickup_latitude= 40.86587)
data_kmeans$centers
library(clue)
(cluster_num <- cl_predict(data_kmeans,x))
result <- data1 %>% filter(cluster==cluster_num)
result %>% str()
round_num <- 3
result %>% group_by(lng=round(Pickup_longitude,round_num),lat=round(Pickup_latitude,round_num)) %>%
count() %>% arrange(desc(n)) %>% head(5)
data_kmeans <- data_coord %>% kmeans(50,nstart=20)
data1 <- data %>% filter(Trip_type==1)
data1$cluster <- data_kmeans$cluster
pal <- colorNumeric(
palette = "Blues",
domain = data$cluster)
set.seed(0)
data1 %>% sample_n(size=10000) %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(~Pickup_longitude, ~Pickup_latitude, radius = 1,
color = ~pal(cluster), fillOpacity = 0.001)
greentaxi2 <- makeIcon(
iconUrl = "https://i.imgur.com/6rw618Q.png",
iconWidth = 18, iconHeight = 15,
iconAnchorX = 9, iconAnchorY = 19
)
data_kmeans$centers %>% as_data_frame() %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(~Pickup_longitude, ~Pickup_latitude, radius = 1,
color = "firebrick", fillOpacity = 0.001)%>%
addMarkers(~Pickup_longitude, ~Pickup_latitude, icon = greentaxi2)
x <- data_frame(Pickup_longitude= -73.90395, Pickup_latitude= 40.86587)
data_kmeans$centers
library(clue)
(cluster_num <- cl_predict(data_kmeans,x))
result <- data1 %>% filter(cluster==cluster_num)
result %>% str()
round_num <- 3
result %>% group_by(lng=round(Pickup_longitude,round_num),lat=round(Pickup_latitude,round_num)) %>%
count() %>% arrange(desc(n)) %>% head(5)
result %>% group_by(lng=round(Pickup_longitude,round_num),lat=round(Pickup_latitude,round_num)) %>%
count() %>% arrange(desc(n)) %>% head(5) %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(~lng, ~lat, radius = 1,
color = "firebrick", fillOpacity = 0.001)%>%
addMarkers(~lng, ~lat, icon = greentaxi, label = ~as.character(paste("Number of Pick ups:",Weekday_Top5$n)))
result %>% group_by(lng=round(Pickup_longitude,round_num),lat=round(Pickup_latitude,round_num)) %>%
count() %>% arrange(desc(n)) %>% head(5) %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(~lng, ~lat, radius = 1,
color = "firebrick", fillOpacity = 0.001)%>%
addMarkers(~lng, ~lat, icon = greentaxi, label = ~as.character(paste("Number of Pick ups:",result$n)))
result %>% group_by(lng=round(Pickup_longitude,round_num),lat=round(Pickup_latitude,round_num)) %>%
count() %>% arrange(desc(n)) %>% head(5) %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(~lng, ~lat, radius = 1,
color = "firebrick", fillOpacity = 0.001)%>%
addMarkers(~lng, ~lat, icon = greentaxi2, label = ~as.character(paste("Number of Pick ups:",result$n)))
result %>% group_by(lng=round(Pickup_longitude,round_num),lat=round(Pickup_latitude,round_num)) %>%
count() %>% arrange(desc(n)) %>% head(10) %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(~lng, ~lat, radius = 1,
color = "firebrick", fillOpacity = 0.001)%>%
addMarkers(~lng, ~lat, icon = greentaxi2, label = ~as.character(paste("Number of Pick ups:",result$n)))
result %>% group_by(lng=round(Pickup_longitude,round_num),lat=round(Pickup_latitude,round_num)) %>%
count() %>% arrange(desc(n)) %>% head(20) %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(~lng, ~lat, radius = 1,
color = "firebrick", fillOpacity = 0.001)%>%
addMarkers(~lng, ~lat, icon = greentaxi2, label = ~as.character(paste("Number of Pick ups:",result$n)))
data1 %>% sample_n(size=10000) %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(~Pickup_longitude, ~Pickup_latitude, radius = 1,
color = ~pal(cluster), fillOpacity = 0.001)
save(data_kmeans, file = "data_kmeans.rda")
load("data_kmeans.rda")
load("data_kmeans.rda")
data1 <- data %>% filter(Trip_type==1)
data1$cluster <- data_kmeans$cluster
pal <- colorNumeric(
palette = "Blues",
domain = data$cluster)
set.seed(0)
data1 %>% sample_n(size=10000) %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(~Pickup_longitude, ~Pickup_latitude, radius = 1,
color = ~pal(cluster), fillOpacity = 0.001)
greentaxi2 <- makeIcon(
iconUrl = "https://i.imgur.com/6rw618Q.png",
iconWidth = 18, iconHeight = 15,
iconAnchorX = 9, iconAnchorY = 19
)
data_kmeans$centers %>% as_data_frame() %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(~Pickup_longitude, ~Pickup_latitude, radius = 1,
color = "firebrick", fillOpacity = 0.001)%>%
addMarkers(~Pickup_longitude, ~Pickup_latitude, icon = greentaxi2)
x <- data_frame(Pickup_longitude= -73.90395, Pickup_latitude= 40.86587)
data_kmeans$centers
library(clue)
(cluster_num <- cl_predict(data_kmeans,x))
result <- data1 %>% filter(cluster==cluster_num)
result %>% str()
round_num <- 3
result %>% group_by(lng=round(Pickup_longitude,round_num),lat=round(Pickup_latitude,round_num)) %>%
count() %>% arrange(desc(n)) %>% head(20) %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(~lng, ~lat, radius = 1,
color = "firebrick", fillOpacity = 0.001)%>%
addMarkers(~lng, ~lat, icon = greentaxi2, label = ~as.character(paste("Number of Pick ups:",result$n)))
set.seed(0)
data_kmeans <- data_coord %>% kmeans(10,nstart=20)
set.seed(0)
# data_kmeans <- data_coord %>% kmeans(10,nstart=20)
# save(data_kmeans, file = "data_kmeans.rda")
load("data_kmeans.rda")
data1 <- data %>% filter(Trip_type==1)
data1$cluster <- data_kmeans$cluster
pal <- colorNumeric(
palette = "Blues",
domain = data$cluster)
set.seed(0)
data1 %>% sample_n(size=10000) %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(~Pickup_longitude, ~Pickup_latitude, radius = 1,
color = ~pal(cluster), fillOpacity = 0.001)
greentaxi2 <- makeIcon(
iconUrl = "https://i.imgur.com/6rw618Q.png",
iconWidth = 18, iconHeight = 15,
iconAnchorX = 9, iconAnchorY = 19
)
data_kmeans$centers %>% as_data_frame() %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(~Pickup_longitude, ~Pickup_latitude, radius = 1,
color = "firebrick", fillOpacity = 0.001)%>%
addMarkers(~Pickup_longitude, ~Pickup_latitude, icon = greentaxi2)
write_csv(data,"processed_data.csv")
data <- fread("processed_data.csv")
data <- fread("processed_data.csv")
inputPanel(
selectInput("n_breaks", label = "Number of bins:",
choices = c(10, 20, 35, 50), selected = 20),
sliderInput("bw_adjust", label = "Bandwidth adjustment:",
min = 0.2, max = 2, value = 1, step = 0.2)
)
renderPlot({
hist(faithful$eruptions, probability = TRUE, breaks = as.numeric(input$n_breaks),
xlab = "Duration (minutes)", main = "Geyser eruption duration")
dens <- density(faithful$eruptions, adjust = input$bw_adjust)
lines(dens, col = "blue")
})
data1 %>% select(Pickup_longitude,Pickup_latitude) %>% summary()
inputPanel(
sliderInput("lng", label = "Longtitude:",
min = -74.630, max = -73.179, value = -74, step = 0.001),
sliderInput("lat", label = "Latitude:",
min = 40.5, max = 41, value = 40.5, step = 0.001)
)
renderPlot({
x <- data_frame(Pickup_longitude= input$lng, Pickup_latitude= input$lat)
(cluster_num <- cl_predict(data_kmeans,x))
result <- data1 %>% filter(cluster==cluster_num)
round_num <- 3
result %>% group_by(lng=round(Pickup_longitude,round_num),lat=round(Pickup_latitude,round_num)) %>%
count() %>% arrange(desc(n)) %>% head(20) %>%
leaflet() %>%
addProviderTiles(providers$Esri.NatGeoWorldMap) %>%
addCircleMarkers(~lng, ~lat, radius = 1,
color = "firebrick", fillOpacity = 0.001)%>%
addMarkers(~lng, ~lat, icon = greentaxi2, label = ~as.character(paste("Number of Pick ups:",result$n)))
# hist(faithful$eruptions, probability = TRUE, breaks = as.numeric(input$n_breaks),
#      xlab = "Duration (minutes)", main = "Geyser eruption duration")
#
# dens <- density(faithful$eruptions, adjust = input$bw_adjust)
# lines(dens, col = "blue")
})
# pacman package install required packages if not available
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, DT, lubridate, leaflet, leaflet.extras, maps, data.table, ggthemes, rebus, clue)
data <- read.csv("http://www.nyc.gov/html/tlc/html/about/trip_record_data.shtml/green_tripdata_2016-02.csv", stringsAsFactors = F)
# data <- fread("green_tripdata_2016-02v2.csv", stringsAsFactors = F, data.table = FALSE, na.strings=c("NA","NaN","?", ""))
data[,which(str_detect(names(data),"amount|fee|Extra|fee|Pay|tax|ID|charge"))] <- NULL
data <- data %>% filter(Pickup_longitude > -75, Pickup_longitude < -73, Pickup_latitude > 40.4, Pickup_latitude <41,
Dropoff_longitude!=0,Dropoff_latitude!=0)
data <- data %>% mutate(lpep_pickup_datetime = ymd_hms(lpep_pickup_datetime),
pickup_hour=hour(lpep_pickup_datetime)+1,
pickup_weekday=as.factor(weekdays(lpep_pickup_datetime)),
pickup_weekend=if_else(pickup_weekday=='Saturday'|pickup_weekday=='Sunday','Weekend','Weekday'),
Lpep_dropoff_datetime = ymd_hms( Lpep_dropoff_datetime),
dropoff_hour=hour(lpep_pickup_datetime)+1,
dropoff_weekday=as.factor(weekdays(lpep_pickup_datetime)))
# pacman package install required packages if not available
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, DT, lubridate, leaflet, leaflet.extras, maps, data.table, ggthemes, rebus, clue)
data <- read.csv("http:\\www.nyc.gov\html\tlc\html\about\trip_record_data.shtml\green_tripdata_2016-02.csv", stringsAsFactors = F)
# data <- fread("green_tripdata_2016-02v2.csv", stringsAsFactors = F, data.table = FALSE, na.strings=c("NA","NaN","?", ""))
data[,which(str_detect(names(data),"amount|fee|Extra|fee|Pay|tax|ID|charge"))] <- NULL
data <- data %>% filter(Pickup_longitude > -75, Pickup_longitude < -73, Pickup_latitude > 40.4, Pickup_latitude <41,
Dropoff_longitude!=0,Dropoff_latitude!=0)
data <- data %>% mutate(lpep_pickup_datetime = ymd_hms(lpep_pickup_datetime),
pickup_hour=hour(lpep_pickup_datetime)+1,
pickup_weekday=as.factor(weekdays(lpep_pickup_datetime)),
pickup_weekend=if_else(pickup_weekday=='Saturday'|pickup_weekday=='Sunday','Weekend','Weekday'),
Lpep_dropoff_datetime = ymd_hms( Lpep_dropoff_datetime),
dropoff_hour=hour(lpep_pickup_datetime)+1,
dropoff_weekday=as.factor(weekdays(lpep_pickup_datetime)))
# pacman package install required packages if not available
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, DT, lubridate, leaflet, leaflet.extras, maps, data.table, ggthemes, rebus, clue)
data <- read.csv("http:\\www.nyc.gov\html\tlc\html\about\trip_record_data.shtml\green_tripdata_2016-02.csv", stringsAsFactors = F)
# data <- fread("green_tripdata_2016-02v2.csv", stringsAsFactors = F, data.table = FALSE, na.strings=c("NA","NaN","?", ""))
data[,which(str_detect(names(data),"amount|fee|Extra|fee|Pay|tax|ID|charge"))] <- NULL
data <- data %>% filter(Pickup_longitude > -75, Pickup_longitude < -73, Pickup_latitude > 40.4, Pickup_latitude <41,
Dropoff_longitude!=0,Dropoff_latitude!=0)
data <- data %>% mutate(lpep_pickup_datetime = ymd_hms(lpep_pickup_datetime),
pickup_hour=hour(lpep_pickup_datetime)+1,
pickup_weekday=as.factor(weekdays(lpep_pickup_datetime)),
pickup_weekend=if_else(pickup_weekday=='Saturday'|pickup_weekday=='Sunday','Weekend','Weekday'),
Lpep_dropoff_datetime = ymd_hms( Lpep_dropoff_datetime),
dropoff_hour=hour(lpep_pickup_datetime)+1,
dropoff_weekday=as.factor(weekdays(lpep_pickup_datetime)))
# pacman package install required packages if not available
if (!require("pacman")) install.packages("pacman")
pacman::p_load(tidyverse, DT, lubridate, leaflet, leaflet.extras, maps, data.table, ggthemes, rebus, clue)
data <- read.csv("https://s3.amazonaws.com/nyc-tlc/trip+data/green_tripdata_2016-02.csv", stringsAsFactors = F)
